// Generated by ReScript, PLEASE EDIT WITH CARE

import ImportTsValueGen from "./ImportTsValue.gen";
import * as ImportTsValueGen$1 from "./ImportTsValue.gen";

function round(prim) {
  return ImportTsValueGen$1.round(prim);
}

var integerValue = ImportTsValueGen$1.integerValue;

var floatValue = ImportTsValueGen$1.floatValue;

var binaryValue = ImportTsValueGen$1.binaryValue;

var booleanValue = ImportTsValueGen$1.booleanValue;

var stringValue = ImportTsValueGen$1.stringValue;

var integerList = ImportTsValueGen$1.integerList;

var integerList2 = ImportTsValueGen$1.integerList2;

var integerList3 = ImportTsValueGen$1.integerList3;

var intstrTuple = ImportTsValueGen$1.intstrTuple;

var intstrTuple2 = ImportTsValueGen$1.intstrTuple2;

var enumValue = ImportTsValueGen$1.enumValue;

var objectSimple = ImportTsValueGen$1.objectSimple;

var objectComplex = ImportTsValueGen$1.objectComplex;

function funcInt2Int(prim) {
  return ImportTsValueGen$1.funcInt2Int(prim);
}

function funcStr2Array(prim) {
  return ImportTsValueGen$1.funcStr2Array(prim);
}

function funcPoint2PointExact(prim) {
  return ImportTsValueGen$1.funcPoint2Point(prim);
}

var intORstrORnull = ImportTsValueGen$1.intORstrORnull;

var unions = ImportTsValueGen$1.unions;

function returnMixedArray(prim) {
  return ImportTsValueGen$1.returnMixedArray();
}

var roundedNumber = ImportTsValueGen$1.round(1.8);

function getAbs(x) {
  return x.getAbs();
}

var AbsoluteValue = {
  getAbs: getAbs
};

function useGetProp(x) {
  return x.getProp() + 1 | 0;
}

function useGetAbs(x) {
  return x.getAbs() + 1 | 0;
}

function useColor(prim) {
  return ImportTsValueGen$1.useColor(prim);
}

function higherOrder(prim) {
  return ImportTsValueGen$1.higherOrder(prim);
}

var returnedFromHigherOrder = ImportTsValueGen$1.higherOrder(function (prim0, prim1) {
      return prim0 + prim1 | 0;
    });

function convertVariant(prim) {
  return ImportTsValueGen$1.convertVariant(prim);
}

function polymorphic(prim) {
  return ImportTsValueGen$1.polymorphic(prim);
}

var $$default = ImportTsValueGen;

export {
  round ,
  integerValue ,
  floatValue ,
  binaryValue ,
  booleanValue ,
  stringValue ,
  integerList ,
  integerList2 ,
  integerList3 ,
  intstrTuple ,
  intstrTuple2 ,
  enumValue ,
  objectSimple ,
  objectComplex ,
  funcInt2Int ,
  funcStr2Array ,
  funcPoint2PointExact ,
  intORstrORnull ,
  unions ,
  returnMixedArray ,
  roundedNumber ,
  AbsoluteValue ,
  useGetProp ,
  useGetAbs ,
  useColor ,
  higherOrder ,
  returnedFromHigherOrder ,
  convertVariant ,
  polymorphic ,
  $$default ,
  $$default as default,
}
/* integerValue Not a pure module */
