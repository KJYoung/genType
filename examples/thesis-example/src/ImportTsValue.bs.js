// Generated by ReScript, PLEASE EDIT WITH CARE

import ImportTsValueGen from "./ImportTsValue.gen";
import * as ImportTsValueGen$1 from "./ImportTsValue.gen";

var integerValue = ImportTsValueGen$1.integerValue;

var floatValue = ImportTsValueGen$1.floatValue;

var binaryValue = ImportTsValueGen$1.binaryValue;

var booleanValue = ImportTsValueGen$1.booleanValue;

var booleanValue2 = ImportTsValueGen$1.booleanValue2;

var booleanValue3 = ImportTsValueGen$1.booleanValue3;

var stringValue = ImportTsValueGen$1.stringValue;

var opValue1 = ImportTsValueGen$1.opValue1;

var opValue2 = ImportTsValueGen$1.opValue2;

var opValue3 = ImportTsValueGen$1.opValue3;

var opValue4 = ImportTsValueGen$1.opValue4;

var opValue5 = ImportTsValueGen$1.opValue5;

var opValue6 = ImportTsValueGen$1.opValue6;

var opValue7 = ImportTsValueGen$1.opValue7;

var opValue8 = ImportTsValueGen$1.opValue8;

var opValue11 = ImportTsValueGen$1.opValue11;

var opValue12 = ImportTsValueGen$1.opValue12;

var opValue21 = ImportTsValueGen$1.opValue21;

var opValue22 = ImportTsValueGen$1.opValue22;

var opValue23 = ImportTsValueGen$1.opValue23;

var opValue24 = ImportTsValueGen$1.opValue24;

var opValue25 = ImportTsValueGen$1.opValue25;

var opValue27 = ImportTsValueGen$1.opValue27;

var opValue31 = ImportTsValueGen$1.opValue31;

var opValue32 = ImportTsValueGen$1.opValue32;

var opValue33 = ImportTsValueGen$1.opValue33;

var integerValueFromVar = ImportTsValueGen$1.integerValueFromVar;

var integerValueFromVarParen = ImportTsValueGen$1.integerValueFromVarParen;

var typeofInteger = ImportTsValueGen$1.typeofInteger;

var instanceofTest = ImportTsValueGen$1.instanceofTest;

var integerList = ImportTsValueGen$1.integerList;

var integerList2 = ImportTsValueGen$1.integerList2;

var integerList3 = ImportTsValueGen$1.integerList3;

var complexList = ImportTsValueGen$1.complexList;

var intstrTuple = ImportTsValueGen$1.intstrTuple;

var intstrTuple2 = ImportTsValueGen$1.intstrTuple2;

var enumValue = ImportTsValueGen$1.enumValue;

var objectSimple = ImportTsValueGen$1.objectSimple;

var objectComplex = ImportTsValueGen$1.objectComplex;

function funcInt2Int(prim) {
  return ImportTsValueGen$1.funcInt2Int(prim);
}

var funcInt2IntRet = ImportTsValueGen$1.funcInt2Int(5);

function funcStr2Array(prim) {
  return ImportTsValueGen$1.funcStr2Array(prim);
}

function funcPoint2PointExact(prim) {
  return ImportTsValueGen$1.funcPoint2Point(prim);
}

var intORstrORnull = ImportTsValueGen$1.intORstrORnull;

var unions = ImportTsValueGen$1.unions;

var exportImport = ImportTsValueGen$1.exportImport;

function returnMixedArray(prim) {
  return ImportTsValueGen$1.returnMixedArray();
}

function useColor(prim) {
  return ImportTsValueGen$1.useColor(prim);
}

function higherOrder(prim) {
  return ImportTsValueGen$1.higherOrder(prim);
}

var returnedFromHigherOrder = ImportTsValueGen$1.higherOrder(function (prim0, prim1) {
      return prim0 + prim1 | 0;
    });

function convertVariant(prim) {
  return ImportTsValueGen$1.convertVariant(prim);
}

function polymorphic(prim) {
  return ImportTsValueGen$1.polymorphic(prim);
}

var $$default = ImportTsValueGen;

export {
  integerValue ,
  floatValue ,
  binaryValue ,
  booleanValue ,
  booleanValue2 ,
  booleanValue3 ,
  stringValue ,
  opValue1 ,
  opValue2 ,
  opValue3 ,
  opValue4 ,
  opValue5 ,
  opValue6 ,
  opValue7 ,
  opValue8 ,
  opValue11 ,
  opValue12 ,
  opValue21 ,
  opValue22 ,
  opValue23 ,
  opValue24 ,
  opValue25 ,
  opValue27 ,
  opValue31 ,
  opValue32 ,
  opValue33 ,
  integerValueFromVar ,
  integerValueFromVarParen ,
  typeofInteger ,
  instanceofTest ,
  integerList ,
  integerList2 ,
  integerList3 ,
  complexList ,
  intstrTuple ,
  intstrTuple2 ,
  enumValue ,
  objectSimple ,
  objectComplex ,
  funcInt2Int ,
  funcInt2IntRet ,
  funcStr2Array ,
  funcPoint2PointExact ,
  intORstrORnull ,
  unions ,
  exportImport ,
  returnMixedArray ,
  useColor ,
  higherOrder ,
  returnedFromHigherOrder ,
  convertVariant ,
  polymorphic ,
  $$default ,
  $$default as default,
}
/* integerValue Not a pure module */
